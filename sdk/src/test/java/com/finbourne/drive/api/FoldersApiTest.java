/*
 * FINBOURNE Drive API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.328-MB
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.drive.api;

import com.finbourne.drive.ApiException;
import com.finbourne.drive.model.CreateFolder;
import com.finbourne.drive.model.LusidProblemDetails;
import com.finbourne.drive.model.LusidValidationProblemDetails;
import com.finbourne.drive.model.PagedResourceListOfStorageObject;
import com.finbourne.drive.model.StorageObject;
import com.finbourne.drive.model.UpdateFolder;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FoldersApi
 */
@Ignore
public class FoldersApiTest {

    private final FoldersApi api = new FoldersApi();

    
    /**
     * [BETA] CreateFolder: Create a new folder in LUSID Drive
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFolderTest() throws ApiException {
        CreateFolder createFolder = null;
        StorageObject response = api.createFolder(createFolder);

        // TODO: test validations
    }
    
    /**
     * [BETA] DeleteFolder: Delete a specified folder and all subfolders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFolderTest() throws ApiException {
        String id = null;
        api.deleteFolder(id);

        // TODO: test validations
    }
    
    /**
     * [BETA] GetFolder: Get metadata of folder
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFolderTest() throws ApiException {
        String id = null;
        StorageObject response = api.getFolder(id);

        // TODO: test validations
    }
    
    /**
     * [BETA] GetFolderContents: List contents of a folder
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFolderContentsTest() throws ApiException {
        String id = null;
        String page = null;
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        PagedResourceListOfStorageObject response = api.getFolderContents(id, page, sortBy, start, limit, filter);

        // TODO: test validations
    }
    
    /**
     * [BETA] GetRootFolder: List contents of root folder
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRootFolderTest() throws ApiException {
        String page = null;
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        PagedResourceListOfStorageObject response = api.getRootFolder(page, sortBy, start, limit, filter);

        // TODO: test validations
    }
    
    /**
     * [BETA] MoveFolder: Move files to specified folder
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void moveFolderTest() throws ApiException {
        String id = null;
        List<String> requestBody = null;
        Boolean overwrite = null;
        Boolean deleteSource = null;
        PagedResourceListOfStorageObject response = api.moveFolder(id, requestBody, overwrite, deleteSource);

        // TODO: test validations
    }
    
    /**
     * [BETA] UpdateFolder: Update an existing folder&#39;s name, path
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFolderTest() throws ApiException {
        String id = null;
        UpdateFolder updateFolder = null;
        StorageObject response = api.updateFolder(id, updateFolder);

        // TODO: test validations
    }
    
}
